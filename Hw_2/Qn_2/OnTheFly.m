%Thisfunctioncalculatesthefundamentalfrequencyofaframeofdata%withtheOnTheFlyalgorithm.%??Input??%data:Frameofdataforwithpitchistobecalculated%fs:Samplingfrequencyofsignal%??Output??%f0:Thecalculatedfundamentalfrequencyoftheinputdata%0isreturnedifnopitchisfoundfunction [f0]=OnTheFly(data,fs)frameLength=length(data);%FramelengthcurveFitSamples=3;%Samplesfromminimatoleftandright%Calculatedifferencefunctiond=zeros(1,frameLength-1);for i=1:frameLength-1d(i)=sum((data(1:frameLength-i)-data(i+1:frameLength)).^2);d(i)=d(i)/(2*sum(data(1:frameLength-i).^2+data(i+1:frameLength).^2));end%Findglobalminimaand4localminima(smallestminima)withminimum10%samplesbetweenminimas.Minimascanhaveamaximumvalueof0.4[minimas minCount]=findmin(d,5,10,0.4);%mins(end:?1:2,:)=mins(2:end,:);nMins=size(minimas);%Iftomanylocalminimasarelocatedbyfindmin,thesignalislikelyto%benoise,andthereforenottobeprocessed.Alsoifnominimashasbeen%found,thedataisproperlyunvoiced,andisnottobeprocessed.if minCount<=20&&nMins(1)>0%Minimizationofquatizationerrorwithparablecurvefittingforeachminimafor i=1:nMins(1)%x?coodinatestomakecurvefittingfromx=(minimas(i,1)-curveFitSamples):(minimas(i,1)+curveFitSamples);%Removescoordinatesofx,whichisnotwithinthedataframex(find(x<1|x>(frameLength-1)))=[];y=d(x);%Correspondingvaluesofx?coordinates[minimas(i,1) minimas(i,2)]=parreg(x,y);%Curvefittingandtoppointextractionend%Thresholdingstage1TTh1=0.2;ATh1=0.07;%Thresholdsettings[tg mins]=findf0(TTh1,ATh1,minimas);%Thresholdingstage2TTh2=0.05;ATh2=0.2;%Thresholdsettings[tg mins]=findf0(TTh2,ATh2,[tg;minimas]);f0=fs/tg(1);%Calculationofthefundamentalfrequencyoftheframeelsef0=0;%Zeroifframeisunvoicedornoise!end